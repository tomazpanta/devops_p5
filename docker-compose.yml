# version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: mysql_db_devops_p5
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${ENV_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${ENV_MYSQL_DATABASE}
      MYSQL_USER: ${ENV_MYSQL_USER}
      MYSQL_PASSWORD: ${ENV_MYSQL_PASSWORD}
    volumes:
      - mysql_data_devops_p5:/var/lib/mysql
    networks:
      - devops_network
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-uroot", "-p${ENV_MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  backend:
    build:
      context: ./backend/backend
      dockerfile: Dockerfile
    container_name: backend_app_devops_p5
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_PORT: 3306
      DB_NAME: ${ENV_MYSQL_DATABASE}
      DB_USER: ${ENV_MYSQL_USER}
      DB_PASSWORD: ${ENV_MYSQL_PASSWORD}
    networks:
      - devops_network

  frontend:
    build: # <--- ESTA SEÇÃO É ESSENCIAL
      context: ./frontend/frontend # Caminho para a pasta que contém o Dockerfile do frontend
      dockerfile: Dockerfile      # Nome do Dockerfile (geralmente 'Dockerfile')
    container_name: frontend_app_devops_p5
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - devops_network

volumes:
  mysql_data_devops_p5:

networks:
  devops_network:
    driver: bridge